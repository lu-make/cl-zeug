(defparameter *n* 0)
(defun FizzBuzz ()
	(if (<= *n* 100)(
		let(
		(d3 (zerop (mod *n* 3)))
		(d5 (zerop (mod *n* 5)))
		)
		(cond 
		((and d3 d5)
			(with-open-file (stream "fizzbuzz.txt" :direction :output :if-exists :append :if-does-not-exist :create)
				(format stream "Fizz")
				(terpri stream)
			)
		)
		(d3 
			(with-open-file (stream "fizzbuzz.txt" :direction :output :if-exists :append :if-does-not-exist :create)
				(format stream "Fizz")
				(terpri stream)
			)
		)
		(d5 
			(with-open-file (stream "fizzbuzz.txt" :direction :output :if-exists :append :if-does-not-exist :create)
				(format stream "Buzz")
				(terpri stream)
			)
		)
		(t 
			(with-open-file (stream "fizzbuzz.txt" :direction :output :if-exists :append :if-does-not-exist :create)
				(format stream "~d" *n*)
				(terpri stream)
			)
		)
		)
		(incf *n*)
		(FizzBuzz)
	)
	)
)
(FizzBuzz)